# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: App Tests

on:
  push:
    branches: [ 'master' ]
  pull_request:
    branches:
    - 'master'
    - 'twig/**'

jobs:
  type-check:
    name: Check types
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ '22.x' ]
    defaults:
      run:
        working-directory: meteor-app
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: 'meteor-app'
    - run: npm ci
    - run: npm run check:type

  code-style-check:
    name: Check coding styles
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ '22.x' ]
    defaults:
      run:
        working-directory: meteor-app
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: 'meteor-app'
    - run: npm ci
    - run: npm run check:code-style

  tests:
    name: Unit tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ '22.x' ]
    defaults:
      run:
        shell: bash -l {0}
        working-directory: meteor-app
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: 'meteor-app'
    - name: Install Meteor 3.3.2
      run: npm install -g meteor@3.3.2
    - run: meteor npm ci
    - run: meteor npm run build --if-present
    - run: meteor npm test
